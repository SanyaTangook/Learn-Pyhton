'''ทำงานกับคลาสและออบเจ็กต์
    คลาส เป็นการอธิบายถึงลักษณะและการทำงานของออบเจ็กต์ที่เราจะสร้าง
เป็นเหมือนกับแม่พิมพ์(Buleprint) ของ ออบเจ็กต์ที่เราสร้างคลาสเพื่ออธิบายรถยนต์
คลาสนั้นก็จะต้องมีตัวแปรที่เก็บข้อมูลต่าง ๆ เกี่ยวกับรถยนต์
(Attribute) เช่น สี ความเร็ว และมีวิธีการใช้รถยนต์ (Methot) เช่น
การเหยียยบคันเร่งให้รถเคลื่อนที่ เป็นต้น ดังนั้น คลาสจึงถูกใช้เพื่อเป็นรูปแบบของออบเจ็กต์ โดยการรวมตัวแปรเก็บข้อมูล
และเมธอดเข้ารวมเป็นกลุ่มเดียวกัน
'''

#การสร้างคลาส 
'''
คลาสมีลักษณะเป็นเหมือนชนิดข้อมูลที่ผู้ใช้กำหนดขึ้นมาใช้งานเอง 
ดังนั้นการนำไปใช้งานต้องการกระทำผ่านตัวแปรที่ประกาศเป็นออบเจ็กต์ด้วยชนิดของคลาสหรือ 
เรียกว่าตัวแปรว่า อินสแตนซ์ของคลาส (Instance) การะประกาศสร้างคลาส
จะเริ่มต้นด้วย คีย์เวิร์ด class ตามด้วยชื่อของคลาส ปิดท้ายด้วยเครื่องหมายโคลอน : จากนั้น
จะเข้าสู่โค้คของตัวคลาส (Body) ที่อยู่ภายในย่อหน้า ส่วนรายการของสมาชิกจะอยู่ภายในตัวคลาสมีรูปแบบดังนี้
class               ชื่อคลาส ให้กำหนดตามกฎตั้งชื่อของตัวแปรและฟังก์ชัน(Identifier)
    ['document']    คำอธิบายเพิ่มเติมของคลาส ที่อยู่ภายในเครื่องหมาย ' ' โดยส่วนใหญ่จะใส้ไว้ด้านบนของคลาส จะมีหรือไม่มีก็ได้
    class_suite     เป็นส่วนประกอบทั้งหมดที่เป็นสมาชิกของคลาส ได้แก่ ตัวแปรของคลาส (Class variable) 
                    ตัวแปรของอินสแตนซ์(Instance variables) และเมธอด(Method)
'''
# ชื่อ เงินเดือน
from unicodedata import name


class Employee0: #การสร้างคลาส
    pass

#การสร้างวัตถุ
emp1 = Employee0()

# ตัวแปรของคลาส (Class variable) 
'''ตัวแปรที่ประกาศภายในคลาส ซึ่งข้อมูลจะถูกแชร์ในออบเจ็กต์ทั้งหมดที่เป็นอินสแตนซ์ของคลาส
เข้าใช้งานร่วมกันหรือเป็นแอตทริบิวต์ของออบเจ็กต์'''
# ตัวแปรของอินสแตนซ์ (Instance variables) 
'''เป็นเมธอดหรือฟังก์ชันพิเศษที่จะเริ่มทำงานทันทีเมื่อออบเจ็กต์ถูกสร้างขึ้นมาใหม่จากคลาส หรือเรียกว่า
คอนสตรักเตอร์(Constructir) โดย
    *สร้างเป็นเมธอดแรกภายในคลาสต่อจากตัวแปรของคลาส
    *ใช้คำสั่ง def และตามด้วยคีย์เวิร์ด __init__ เพื่อกำหนดค่าเริ่มต้นให้กับออบเจ็กต์ (Initializing the object)
    *กำหนดพารามิเตอร์แรกคือ Self เป็นพอยน์เตอร์ที่ชี้ไปยังตำแหน่งหน่วยความจำของออบเจ็กต์ ส่วนพารามิเตอร์ถัดไปมีได้มากว่า 1 ตัวแปร
    ซึ่งจะไม่ซ่ำกับตัวแปรของคลาส
'''
class Employee:
    'methon'
    def detail(self):
        self.name = "Sanya"
        self.salary = 50000
        print("ชื่อพนักงาน = {}".format(self.name))
        print("เงินเดือน  = {}".format(self.salary))

class ProductB:     #สร้างคลาส
    prodID=0        #กำหนดค่าตัวแปรของคลาส

    def __init__(self,name,price):  #กำหนดตัวแปรของอินสแตนซ์ หรือคอนสตรักเตอร์
        self.name = name            #ตัวแปร name ที่รับค่าเริ่มต้นจากการสร้างออบเจ็กต์ใหม่
        self.price = price          #ตัวแปร price ที่รับค่าเริ่มต้นจากการสร้างออบเจ็กต์ใหม่
        ProductB.prodID +=1         #เพิ่มค่าในตัวแปรของคลาส prodID อีก 1 ตัว
    def dispProduct(self):          #กำหนดเมธอดพิมพ์แสดงชื่อและราคาสินค้า
        print('Name : ',self.name,'Salary :',self.price)

'''จากตัวอย่าง คอนสตรักเตอร์ จะเป็นเมธอดแรกที่อยู่ถัดตัวแปรของคลาสซึ่งจะรับค่าอาร์กิวเมนต์จากออบเจ็กต์ที่สร้างใหม่
มากำหนดค่าให้กับตัวแปร name และ price ส่วนคำสั่งสุดท้ายจะเรียกใช้ตัวแปรของคลาส prodID จากนั้นเพิ่มค่าขึ้น 1 
ซึ่งเมธอดจะเข้าถึงตัวแปรคลาสได้โดยอ้างอิงด้วย ชื่อคลาส.ชื่อตัวแปรของคลาส
เมธอด(Method) เป็นฟังก์ชันการทำงานที่สร้างขึ้นถายในคลาส ซึ่งเมธอดจะถูกแชร์ให้ทำงานบนออบเจ็กต์ต่าง ๆ ที่เป็นอินเตอนซ์ของคลาส
และสนับสนุนให้ออบเจ็กต์นั้นเข้าถึงสมาชิกทั้งหมดของคลาส หากกำหนดพารามิเตอร์เป็น self ใน () จะเป็นการอ้างถึงข้อมูลจากตัวแปรออบเจ็กต์ตัวเอง
'''
# def dispProduct(self):       
#     print('Name : ',self.name,'Salary :',self.price)
'''จากตัวอย่างโค้ค เมธอด dispProduct มี self เป็นพารามิเตอร์ที่ชี้ไปยังตำแหน่งหน่วยความจำของออบเจ็กต์
และภานในเมธอดจะมีคำสั่งพิมพ์ข้อความจากตัวแปรของออบเจ็กต์ตัวเองโดยอ้างถึงด้วย self.ชื่อตัวแปรนั้น'''
#การสร้างวัตถุ
emp2 = Employee()
emp2.detail()

# การสร้างออบเจ็กต์ 
'''เมื่อเราได้สร้างคลาสมาเป็นพิมพ์เขียวสำหรับออบเจ็กต์เรียบร้อยแล้ว
จากนั้นจะสร้างออบเจ็กต์จากคลาสนั้นหรือเรียกว่า อินสแตนซ์ (Instance)มีวิธีเหมือนการประกาศตัวแปรทั่วไป
โดยการกำหนดชื่อคลาสเป็นชนิดข้อมูลและเครื่องหมาย () แต่หากคลาสนั้นมีคอนสตรักเตอร์ ให้เรากำหนดค่าอาร์กิวเมนต์
ภายในเครื่องหมาย () ด้วยและภายในโปรแกรมหนึ่งจะมีออบเจ็กต์ของคลาสเดียวกันได้มากกว่าหนึ่งออบเจ็กต์'''

# รูปแบบ odjname = ClassName ()
'''
ObjName ชื่อออบเจ็กต์ที่ถูกสร้าง
ClassName ชื่อคลาสที่เป็นพิมพ์เขียวของออบเจ็กต์
'''

#การออบเจ็กต์
emp2 = Employee()   #สร้างออบเจ็กต์ em2 จากคลาส Employee ไม่มีการคืนค่า
emp2.detail()
book1 = ProductB('Photoshop',299) #สร้างออบเจ็กต์ book1 จากคลาส ProductB

# การเรียกใช้สมาชิกของคลาส 
'''
ออบเจ็กต์สามารถเรียกใช้และทำงานกับสมาชิกที่ตัวแปรของคลาสและเมธอดภานในคลาสได้ โดยให้พิมพ์ ชื่อออบเจ็กต์ตาม.ด้วยชื่อของสมาชิก
ที่เป็นตัวแปรของคลาสหรือเมธอดที่ต้องการ'''

# รูปแบบ objcetName.Member_Class[=Value]
'''
ObjectName ชื่อของออบเจ็กต์ที่เป็นอินสแตนซ์จากคลาส
member_Class ตัวแปรของคลาสหรือเมธอด
Value ค่ากำหนดให้ตัวแปรของคลาส
'''


