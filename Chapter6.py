#คำสั่ง วนรอบซ้ำ Loop 
'''เป็นคำสั่งวนรอบให้กลับไปทำงานในสเตตเมนต์นั้นซ้ำตามจำนวนรอบหรือเงื่อนไขที่กำหนด เรียกคำสั่งนี้ว่า คำสั่งวนลูป หรือวนรอบซ้ำ 
ภาษาไพธอนมีคำสั้งได้แก่ While และ for รวมคำสั่งที่เกี่ยวข้องกับการวนลูป คือ คำสั่ง break เพื่อหยุดการทำงานของลูป และคำสั่ง 
continue ข้ามคำสั่งถัดไปเพื่อเรื่มวนรอบใหม่
'''

#การวนลูปด้วยคำสั่ง While
'''while โดยตรวจสอบเงื่อนไขก่อนเข้าทำงานในสเตตเมมต์และวนลูปไปเรื่อย ๆ 
จนเมื่อเงื่อนไขเป็นเท็จ ก็จะออกจากลูป '''
"""
while Boolena-expression :
    block statement
"""
"""
Boolena-expression : วนลูปเมื่อเงื่อนไขในนิพจ์เป็นจริงและหยุดทำซ้ำเมื่อเป็นตามเท็จ
ิblock statement : บล็อกหรือกลุ่มคำสั่งที่ต้องย่อหน้าเข้าด้านในภายใต้คำสั่ง Whlie
"""
count,sum=1,0 #กำหนดตัวแปรมา 2 ตัว 
while count <= 5 : #กำหนดเงื่อนไข ให้วนลูปจนกว่า count น้อยกว่าหรือเท่ากับ 5
    sum += count #ตัวแปร sum ทำการบวกกับ count
    print('Value of sum =',sum) #ทำการprint 'Value of sum =',sum
    count +=1 #count + 1  
#และจะการวนลูปไปจนกว่า count น้อยกว่าหรือเท่า 5

#การวนลูปด้วยคำสั่ง for
'''
เป็นการวนลูปที่สามารถกำหนดจำนวนที่แน่นอน โดยกำหนดค่าเริ่มต้นและจุดสุดท้าย
จะใช้ in ในการร่วมดำเนินการทำซ้ำเพื่่อเข้าถึงรายการในชนิดข้อมูลแบบเรียงลำดับ
สามารถระบุช่วงของค่าในรายการที่ใช้ได้โดยระบุช่วงที่ต้องการด้วยฟังชั่น range()
'''
'''
for itreate_ver in sequence:
    statment

itreate_ver ตัวแปรที่เก็บค่าจากรายการเมื่อวนลูปแต่รอบ
sequence ข้อมูลชนิดเรียงลำดับราย ได้แก่ str list Tupe หรือ การกำหนกช่วงด้วย range()
statment กลุ่มคำสั่งที่ต้องการให้ทำซ้ำในแต่ละรอบ โดยจะอยู่ในย่อหน้าภายใต้คำสั่ง for
'''
#ตัวอย่างในการใช้
s=['s','a','n','y','a'] #ทำการสร้างลิตส์ข้อมูล
n=1 #กำหนดให้ n=1
for i in s: #เรียงใช้คำสั่ง for โดยกำหนดใช้ วนลูปอ่านข้อมูลในลิสต์
    print('List itme',n,'=',i) #แสดงผลข้อมูลในแต่ละลิตส์รายการที่เก็บ ในตัวแปร i
    n+=1 # n = n+1
#ถ้าต้องการแสดงข้อมูลในแถวเดียว ให้เราใช้ end='' ในฟังชั่น print() ต่อจากตัวแปร เพื่อเว้นช่องว่างในระยะหว่างช่อง
for i in s:  #เรียงใช้คำสั่ง for กำหนดให้ i นำค่าตัวแปร s มานับ
    print(i,end='') #ทำการแสดงผล end=' ' เพื่อเว้นช่องว่าง
'''สำหรับคำสั่งชนิดข้อมูลอื่น ๆ ที่เป็นชนิดเรียงลำดับรายการ(seqnence) ได้แก่ list และ Tupe Set Dicitonary
ก็สามารถใช้คำสั่ง for ในการเข้าถึงข้มูลในแต่ละลิสต์รายการได้เช่นเดียวกัน ซึ่งจะกล่าวในบทต่อไป'''

#การใช้ range() ในคำสั่ง for 
'''range() เป็นฟังก์ชันในใช้สร้างลำดับตัวเลข ซึ่งสามารถนำลำดับตัวเลขมาใช้กับรายการของข้อมูลประเภทเรียงลำดับรายการ
และนำมาใช้กับคำสั่ง for เพื่อแสดงลำดับตัวเลขในลักษณะต่าง ๆ มีรูปแบบนั้นดังนี้'''
#range (x) สร้างลำดับตัวเลข เพิ่มขึ้นทีละ 1 เริ่มจาก 0 จนค่าสุดท้ายก่อนถึงค่า x
#range (x,y) สร้างลำดับตัวเลข เพิ่มขึ้นทีละ 1 เริ่มจาก x จนค่าสุดท้ายก่อนถึงค่า y
#range (x,y,z) สร้างลำดับตัวเลข เพิ่มขึ้หรือลดลงตามค่า z เริ่มจาก x จนค่าสุดท้ายก่อนถึงค่า y
for i in range(0,10,2): #เริ่มจาก 0 โดยเพิ่มค่าทีละ 2 จนค่าสุดท้ายก่อนถึง 10
    print(i,end='')

#การใช้ for ร่วมกัย if elif else
for i in range(1,10): #กำหนดให้ i เริ่มต้นที่ 1 จนก่อนถึง 10
    if i%2 == 0:
        print(i,"is even number")
    else :
        print(i,"is odd number")

#การวนลูปซ้อนกัน
'''เป็นการวนลูปชุดหนึ่งซ้อนอยู่ภายในการวนลูปชุดอื่น ซึ่งสามารถใช้ชนิด While และ for 
ซ้อนเฉพาะในชนิดเดียวกัน หรือจะผสมชนิดกันก็ได้ มีรูปแบบดังนี้'''
"""
while/ for loop
    while/ for loop
        statement
    statement
"""
x=y=0 #กำหนด x y =0
print('+---------------------------------------------+') #แสดงเส้นขอบ
for row in range(1,11): #กำหนดจำนวนแถว 1-10(คำสั่งวนลูปชั้นนอก)
    print(' ',end=' ') #กำหนดช่องว่างด้านหน้าของแต่ละแถว
    print('|',end=' ') #กำหนดเครื่องหมาย | ด้านหน้าของแต่ละแถว
    for column in range(1,11): #กำหนดคอลัมม์ 1-10 (ลูปชั้นใน)
        y=x+column #เก็บค่าจำนวนนับแต่ละคอลัมม์ในตัวแปร y
        print(end=' ') #กำหนดช่องว่างในแต่ละคอลัมม์
        if y < 10: #ถ้า ค่า น้อยว่า 10
            print(end=' ') #กำหนดช่องว่างเพิ่มแต่ละคอลัมม์ถ้า y น้อยกว่า 10
        print(y,end=' ') #แสดงว่า y แต่ละคอลัมม์
    x = y #นำค่า y เก็บในตัวแปร x เมื่อจบแต่ละคอลัมม์
    if y == 100: #ถ้า y เท่ากับ 100
        print('|') #ไม่ต้องเว้นช่องว่างหน้าเครื่องหมาย |
    else : #ถ้า yไม่เท่ากับ 100 
        print(' |') #ให้เว้นช่องว่างหน้าเครื่องหมาย | 
print('+---------------------------------------------+') #แสดงเส้นขอบ

#การควบคุมการวนลูปด้วย break continue และ else
'''เราสามารถให้โปรแกรมข้ามไม่ทำคำสั่งในบางส่วนหรือหยุดออกจากลูป โดยใช้คำสั่ง brrak และ continue
ซึ่งตรวจสอบเงื่อนไขด้วย if และเลือกทำด้วย else เมื่อเงื่อนไขเป็นเท็จ'''

#คำสั่ง break 
'''ใช้สั่งให้หยุดและออกจากการวนลูปทันที โดยไม่ต้องกระทำคำสั่งที่เหลือภายในลูปทันที โดยไม่ต้องกระทำคำสั่งที่เหลือภาย
ในลูปที่อยู่ลำดับถัดไปหลัง break เมื่อออกจากลูปแล้วจะกระทำคำสั่งลำดับถัดไปที่อยู่ภายนอกลูป'''

'''
whlie condition :               
    statement inside loop
    if condition :
        break               ---
    statement inside loop      |
statement outside loop      <--
'''
'''
for iterate_var in sequence :
        statement inside loop
    if condition :
        break               ---
    statement inside loop     |
statement outside loop      <--
'''

num,sum=1,0 #กำหนดตัวแปร
while num < 10 : #วนลูปทำซ้ำเมื่อค่าในตัวแปร num น้อยกว่า 10
    sum +=num 
    if num > 5 : #ถ้า num มากว่า 5
        break #หยุดออกจากลูป
    print("Value of sum loop ",num,"=",sum) #แสดงรอบ และ จำนวนผลรับ
    num +=1 #unm +1
print("Here outside loop") #แสดงว่าออกจากลูปแล้ว
'''จะแสดงผลจำนวนครั้งในการวนลูปตั้งแต่ 1-5 พร้อมผล จากนั้นเมื่อเพิ่มค่า num เป็น 6 เงื่อนไข if เป็นจริง
จะกระทำคำสั่งbreak ออกจากลูป และพิมข้อความ "Here outside loop" '''

#คำสั่ง continue 
'''เป็นการข้ามโดยไม่กระทำคำสั่งที่เหลืออยู่ในลูปปัจจุบัน แล้วกลับไปเริ่มต้นวนลูปทำงานกับสเตตเมนต์ในรอบถัดไป'''

'''
whlie condition :               
    statement inside loop   <--
    if condition :             |
        coutinue            ---
    statement inside loop
statement outside loop
'''
'''
for iterate_var in sequence :
        statement inside loop   <--
    if condition :                 |
        continue                ---
    statement inside loop
statement outside loop
'''
#การใช้คำสั่ง continue ใน for
phone1=input('Enter your Phone number : ') #ป้อนตัวเลขเบอร์มือถือ
for tel1 in phone1 :  #วนลูปเพื่อแสดงเบอร์โทร
    if tel1 == '-' : #ถ้าในเบอร์มีเครื่องหมาย -
        continue    #ข้ามคำสั่งที่อยู่ในลูปในปัจจุบัน แล้วไปวนลูปทำรอบถัดไป
    print(tel1,end='') #พิมพ์เบอร์โทรศัทพ์ โดยปิดท้ายให้ตัวเลขเรียงกัน


'''จะใช้คำสั่ง continue ข้ามคำสั่งถัดไปที่อยู่ในลูป for โดยข้ามคำสั่งพิมพ์แสดงข้อมูล ถ้าข้อมูลในสตริงของเบอร์โทรมีเครื่องหมาย - ดังนี้'''

'''เมื่อรันโปรแกรม จะวนลูปพิมพ์หมายเลขเบอร์โทรศัทพ์เรียงต่อกัน แต่ถ้าเจอเครื่องหมาย - คั่นอยู่ ก็ข้ามไปวนลูปไปวนลูปพิมพ์ตัวเลขถันไปจนครบ และสุดท้ายพิมพ์แจ้งว่าจบออกจากลูปแล้ว'''

#คำสั่ง else 
'''กรณีในลูป while for ไม่มีเงื่อนไขครงกับคำสั่ง break หรือ continue ตามที่กำหนดไว้ก็จะไปทำงานที่แสดงที่สแตตเมนต์ในส่วน else แทน'''

'''
whlie condition :               
    statement 
    if condition : break
    if condition : continue
else :
    statement 
statement outside loop
'''
'''
for iterate_var in sequence :
    statement 
    if condition : break
    if condition : continue
else :
    statement 
statement outside loop
'''
phone2=input('Enter your Phone number : ')
for tel2 in phone2 : #ใช้คำสั่งซ้ำ for เพื่อตรวจสอบเลขนำโชค
    if tel2 == '7' : #กำหนด ถ้า เบอร์โทรมีเลข 7 
        print(tel2 , 'is Lucky number') #จะแสดงผล
        break #ถ้ามีจะหยุดลูป
    else : #ถ้าไม่มีเลข 7
        print('not found Lucky number')
'''เมื่อรันโปรแกรม จะทำการค่าเบอร์โทรม่ตรวจสอบถ้าในเบอร์โทรนั้น มีเลข 7 จะแสดงผลวา
 7 is lucky number และทำการหยุดลูปแต่ไม่มีจะแสดงผล not found lucky number'''

#การวนลูปทำซ้ำจนไม่มีจุดสิ้นสุด (Infinite Loop)
'''เป็นการทำซ้ำอย่างต่อเนื่อง เพราะตรวจสอบเงื่อนไขแล้วไม่พบว่าเป็นเท็จ'''

i=0 #ประกาศตัวแปร i = 0
while i == 0: #วนลูปในขณะที่ i มีค่าเท่ากับ 0
    num3= int(input('Enter a number :'))
    print('You enterd :', num3)