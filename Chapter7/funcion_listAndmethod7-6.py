#ฟังก์ชันและเมธอนสำหรับชนิดข้อมูลแบบลิสต์รายการ
"""
ชนิดข้อมูลที่มีการเก็บข้อมูลเป็นลักษณะลิสต์รายการ ได้แก่ String list set Tuple Dictionary
จะมีฟังก์ชันจากไลบรารีมาตรฐานที่ให้เราสามารถเรียกใช้กับข้อมูลเหล่านี้ได้ รวมทั้งข้อมูลจัดเป็นออบเจ็กที่มี 
เมธอน (คือ ฟังก์ชันประจำออบเจ็กต์ที่สนับสนุนการทำงานกับข้อมูล) ให้ใชงานเพิ่มเติมอีกด้วย
เช่น การลบ/เพิ่ม ค้นหาข้อมูลในลิสต์รายการ ซึ่งการเรียกใช้เมธอดทำได้โดยการพิมพ์ชื่อตัวแปรตามด้วยเครื่องหมายจุด(.)
และชื่อเมธอด
"""
# รูปแบบ list_name.method_name([arguments-list])
'''
list_name ชื่อตัวแปรที่เก็บชนิดข้อมูลแบบลิสต์รายการ
method_name ชื่อเมธอดที่ต้องการใช้งาน
arguments-list เป็นค่าที่ส่งไปยังพารามิเตอร์สำหรับบางเมธอดกำหนดให้มีการส่งค่า
'''

# เมธอดสำหรับชนิดข้อมูล
'''
    เมธอดที่ควรรู้จักภายในชนิดข้อมูล String ได้แก่ เมธอดเปลี่ยนอักษรเป็นพิมพ์เล็ก/ใหญ่ การค้นหาในสตริง
หรือการแทนที่ข้อมูลในสตริง
'''

s = 'Python programming'
print('S =',s)
print(s.count('P')) #นับจำนวนอักขระหรือข้อความ P
print(s.find('g'))  #ค้นหาตำแหน่งของตัวอักษรหรือข้อความ (นับตำแหน่งแรกจากซ้ายไปขวา)
print(s.lower())    #เปลี่ยนข้อความเป็นตัวเล็ก
print(max(s))       #คืนค่าตัวอักขระค่าสูงสุดที่อยู่ในข้อความ
print(min(s))       #คืนค่าตัวอักขระค่าต่ำสุดที่อยู่ในข้อความ
print(s.replace(' ','-'))#แทนตัวอักษรหรือข้อความด้วยตัวอักษรหรือข้อความ 
print(s.split('x')) #แบ่งข้อความออกเป็นส่วนย่อยด้วย x
print(s.upper())    #เปลี่ยนตัวอักษรเป็นตัวใหญ่

'''
    เมธอดสำหรับ list ฟังก์ชันที่สนับสนุนการทำงานกับชนิดข้อมูล list ที่ต้องใช้บ่อย
'''
ls=[1,2,3,4,5,'S','a','n','y','a']
ls1=[45,1,20,35,10,55,30]
ls2=[45,1,20,35,10,55,30]
seq=(1,2,3,4,5,'S','a','n','y','a')
print(ls)
print(len(ls))      #หาค่าความยาวทั้งหมดของลิสต์
print(max(ls1))     #รายการในลิสต์ที่มีค่าสูงสุด
print(min(ls1))     #รายการในลิสต์ที่มีค่าต่ำสุด
print(list(seq))    #แปลงข้อมูล tuple ให้เปลี่ยน list 
'''เมธอดในระดับพื้นฐานที่มักนำมาใช้บ่อย ๆ '''
ls.append('N')      #เพิ่มข้อมูลลงในลิสต์รายการ โดยข้อมูลจะต่อจากลิสต์รายการตัวสุดท้าย
print(ls)
ls1.extend(ls)      #นำลิสต์รายการมาต่อเข้าด้วยกัน
print(ls1)
print(ls.count(1))  #นับจำนวนค่า 1 ที่อยู่ในลิสต์รายการ
ls.insert(2,0)      #แทรกค่า 0 ในตำแหน่งที่กำหนดคือตำแหน่งที่ 2 ในลิสต์รายการ
print(ls)
ls.remove(0)        #ถอนค่า 0 ออกจากรายการลิสต์
print(ls)
ls2.sort()          #เรียงลำดับข้อมูลในลิสต์รายการ(ต้องเป็นชนิดข้อมูลเดียวกันหรือสอดคล้องกัน)
print(ls2)

'''
    ฟังก์ชันที่สนับสนุนการทำงานกับข้อมูล Tuples ที่ต้องใช้บ่อย 
'''
tu=(1,2,3,4,5,'S','a','n','y','a')
seq1=[1,2,3,4,5,'S','a','n','y','a']
'''
    ฟังก์ชันที่สนับสนุนการทำงานกับชนิดข้อมูล Tuples    
'''
print(len(tu))      #นับความยาวทั้งหมดของทูเพิล
print(tuple(seq1))  #แปลงของข้อมูลlist เป็น Tuple
'''
    เมธอดที่จะพื้นฐานที่มักนำมาใช้บ่อย ๆ 
'''
tu.count(5)         #หาค่าที่ซ้ำในลิสต์รายการ
tu.index('S')       #บอกตำแหน่งในลิสต์รายการของค่าที่กำหนด

'''เมธอดสำหรับชนิดข้อมูล Set '''
s1={1,2,2,3,3,3,4,4,5}
s2={3,4,5,6,6,7,7,8}
s2.add(10)      #เพิ่มสมาชิกลงในเซ็นที่ละค่า
print(s2)
s2.remove(10)   #ลบค่าในเซ็ต หรือจะให้ s2.discard
print(s2)
print(s1.difference(s2))#หาสมาชิกของเซ็ต s1 ที่ไม่ได้เป็นสมาชิกใน s2
print(s1.intersection(s2))#หาสมาชิกที่อยู่ทั้งใน s1 s2
print(s1.union(s2))     #สมาชิกที่อยู่ใน s1 s2
s1.update({11,15,23})   #เพิ่มสมาชิกที่ละหลายค่า
print(s1)

''' ฟังก์ชันภายใน Dictionary'''
Dic={'Name':'Sanya','Age':20,'height':175}
key=('key','key1','key2')
v1=0
print(len(Dic))     #นับค่าความยาวทั้งหมดของ ดิกชันนารี
print(set(Dic))     #แสดงดิกชันนารีเป็นสตริง
CopyDic=Dic.copy()
print(CopyDic)      #คัดลอกข้อมูลในดิกชันนารี
r=Dic.fromkeys(key,v1)  #สร้างดิกชันนารีใหม่ด้วยจากคีย์ key และ v1 จะถูกกำหนดเป็นค่า
print(r)          
print(Dic.get('Name'))  #ค้นหาค่าจากดิกชันนารีกจากkey
print(Dic.keys())       #แสดงคีย์ทั้งหมดในดิกชันนารี
print(Dic.values())     #แสดงค่าทั้งหมดในดิกชันนารี
Dic.clear()             #ลบข้อมูลในดิกชันนารี